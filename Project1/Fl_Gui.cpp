// generated by Fast Light User Interface Designer (fluid) version 1.0308

#include "Functions.h "/*

static Fl_Double_Window *window=(Fl_Double_Window *)0;

static Fl_Box *box_jpeg_image=(Fl_Box *)0;

static Fl_Box *box_jpeg_image2=(Fl_Box *)0;

static Fl_Tabs *tabPane=(Fl_Tabs *)0;

static Fl_Value_Slider *sld_preBilateral_d=(Fl_Value_Slider *)0;

static Fl_Value_Slider *sld_preBilateral_sCol=(Fl_Value_Slider *)0;

static Fl_Value_Slider *sld_preBilateral_sSpace=(Fl_Value_Slider *)0;

static Fl_Check_Button *chk_preBilateral_enable=(Fl_Check_Button *)0;

static Fl_Box *lblPreBilat=(Fl_Box *)0;

static Fl_Value_Slider *sld_thrsh_low_2=(Fl_Value_Slider *)0;

static Fl_Value_Slider *sld_thrsh_high_2=(Fl_Value_Slider *)0;

static Fl_Check_Button *chk_threshImg_enable_2=(Fl_Check_Button *)0;

static Fl_Box *lblthreshImg_2=(Fl_Box *)0;

static Fl_Check_Button *chk_identification_2=(Fl_Check_Button *)0;

static Fl_Box *lblIdentification_2=(Fl_Box *)0;

static Fl_Value_Slider *sld_preMedian_ksize=(Fl_Value_Slider *)0;

static Fl_Check_Button *chk_preMedian_enable=(Fl_Check_Button *)0;

static Fl_Box *lblPreMedian1=(Fl_Box *)0;

static Fl_Value_Slider *sld_MorphOp_ksize1=(Fl_Value_Slider *)0;

static Fl_Choice *drp_MorphOp_Shape1=(Fl_Choice *)0;

static Fl_Choice *drp_MorphOp_Op1=(Fl_Choice *)0;

static Fl_Check_Button *chk_MorphOp_enable1=(Fl_Check_Button *)0;

static Fl_Box *lblMorphOp1=(Fl_Box *)0;

static Fl_Value_Slider *sld_MorphOp_ksize2=(Fl_Value_Slider *)0;

static Fl_Choice *drp_MorphOp_Shape2=(Fl_Choice *)0;

static Fl_Choice *drp_MorphOp_Op2=(Fl_Choice *)0;

static Fl_Check_Button *chk_MorphOp_enable2=(Fl_Check_Button *)0;

static Fl_Box *lblMorphOp2=(Fl_Box *)0;

static Fl_Value_Slider *sld_postMedian_ksize=(Fl_Value_Slider *)0;

static Fl_Check_Button *chk_postMedian_enable=(Fl_Check_Button *)0;

static Fl_Box *lblPostMedian=(Fl_Box *)0;

static Fl_Value_Slider *sld_thrsh_low_1=(Fl_Value_Slider *)0;

static Fl_Value_Slider *sld_thrsh_high_1=(Fl_Value_Slider *)0;

static Fl_Check_Button *chk_threshImg_enable_1=(Fl_Check_Button *)0;

static Fl_Box *lblthreshImg_1=(Fl_Box *)0;

static Fl_Check_Button *chk_identification_1=(Fl_Check_Button *)0;

static Fl_Box *lblIdentification_1=(Fl_Box *)0;

static Fl_Choice *drp_AHThresh_ThrshType=(Fl_Choice *)0;

static Fl_Choice *drp_AHThresh_AThrshType=(Fl_Choice *)0;

static Fl_Value_Slider *sld_AHThresh_BlkSz=(Fl_Value_Slider *)0;

static Fl_Value_Slider *sld_AHThresh_C=(Fl_Value_Slider *)0;

static Fl_Check_Button *chk_AHThresh_enable=(Fl_Check_Button *)0;

static Fl_Box *lblAHThresh=(Fl_Box *)0;

static Fl_Check_Button *chk_identification_3=(Fl_Check_Button *)0;

static Fl_Box *lblIdentification_3=(Fl_Box *)0;

static Fl_Value_Slider *sld_preMedian_ksize2=(Fl_Value_Slider *)0;

static Fl_Check_Button *chk_preMedian_enable2=(Fl_Check_Button *)0;

static Fl_Box *lblPreMedian2=(Fl_Box *)0;

static Fl_Value_Slider *sld_preMedian_ksize4=(Fl_Value_Slider *)0;

static Fl_Check_Button *chk_preMedian_enable4=(Fl_Check_Button *)0;

static Fl_Box *lblPreMedian4=(Fl_Box *)0;

static Fl_Value_Slider *sld_MorphOp_ksize41=(Fl_Value_Slider *)0;

static Fl_Choice *drp_MorphOp_Shape41=(Fl_Choice *)0;

static Fl_Choice *drp_MorphOp_Op41=(Fl_Choice *)0;

static Fl_Check_Button *chk_MorphOp_enable41=(Fl_Check_Button *)0;

static Fl_Box *lblMorphOp41=(Fl_Box *)0;

static Fl_Value_Slider *sld_MorphOp_ksize42=(Fl_Value_Slider *)0;

static Fl_Choice *drp_MorphOp_Shape42=(Fl_Choice *)0;

static Fl_Choice *drp_MorphOp_Op42=(Fl_Choice *)0;

static Fl_Check_Button *chk_MorphOp_enable42=(Fl_Check_Button *)0;

static Fl_Box *lblMorphOp42=(Fl_Box *)0;

static Fl_Value_Slider *sld_postMedian_ksize4=(Fl_Value_Slider *)0;

static Fl_Check_Button *chk_postMedian_enable4=(Fl_Check_Button *)0;

static Fl_Box *lblPostMedian4=(Fl_Box *)0;

static Fl_Choice *drp_AHThresh_ThrshType4=(Fl_Choice *)0;

static Fl_Choice *drp_AHThresh_AThrshType4=(Fl_Choice *)0;

static Fl_Value_Slider *sld_AHThresh_BlkSz4=(Fl_Value_Slider *)0;

static Fl_Value_Slider *sld_AHThresh_C4=(Fl_Value_Slider *)0;

static Fl_Check_Button *chk_AHThresh_enable4=(Fl_Check_Button *)0;

static Fl_Box *lblAHThresh4=(Fl_Box *)0;

static Fl_Check_Button *chk_identification_4=(Fl_Check_Button *)0;

static Fl_Box *lblIdentification_4=(Fl_Box *)0;

static Fl_Tree *dirTree=(Fl_Tree *)0;

Fl_Box *lblTotTime=(Fl_Box *)0;

static Fl_Button *btn_loadImg=(Fl_Button *)0;

static Fl_Button *btn_saveImg=(Fl_Button *)0;

*/
int __stdcall WinMain(__in HINSTANCE hInstance,__in_opt HINSTANCE hPrevInstance,__in LPSTR lpCmdLine,__in int nShowCmd) {
  Fl::scheme("gtk+");
  //Fl::scheme("gleam");
  //Fl::scheme("plastic");
  	
  Fl::background(238, 240, 241);
  { window = new Fl_Double_Window(1378, 984, "Simple Grape Stemm Visual Aproximator");
    window->box(FL_PLASTIC_UP_BOX);
    window->align(Fl_Align(FL_ALIGN_CLIP|FL_ALIGN_INSIDE));
    { Fl_Group* o = new Fl_Group(720, 14, 640, 951);
      o->box(FL_PLASTIC_DOWN_BOX);
      o->color((Fl_Color)46);
      o->labelsize(24);
      { box_jpeg_image = new Fl_Box(740, 30, 600, 450);
        box_jpeg_image->box(FL_PLASTIC_DOWN_BOX);
        box_jpeg_image->labelfont(3);
        box_jpeg_image->labelsize(26);
        box_jpeg_image->labelcolor((Fl_Color)30);
        box_jpeg_image->align(Fl_Align(512|FL_ALIGN_INSIDE));
        box_jpeg_image->size(box_jpeg_image->w() + margin, box_jpeg_image->h() + margin);
      } // Fl_Box* box_jpeg_image
      { box_jpeg_image2 = new Fl_Box(740, 495, 600, 450);
        box_jpeg_image2->box(FL_PLASTIC_DOWN_BOX);
        box_jpeg_image2->labelfont(3);
        box_jpeg_image2->labelsize(26);
        box_jpeg_image2->labelcolor((Fl_Color)30);
        box_jpeg_image2->align(Fl_Align(512|FL_ALIGN_INSIDE));
        box_jpeg_image2->size(box_jpeg_image2->w() + margin, box_jpeg_image2->h() + margin);
      } // Fl_Box* box_jpeg_image2
      { Fl_Box* o = new Fl_Box(740, 30, 155, 25, "Initial Image");
        o->box(FL_PLASTIC_THIN_DOWN_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->labelfont(3);
        o->labelsize(18);
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(740, 495, 155, 25, "Final Image");
        o->box(FL_PLASTIC_THIN_DOWN_BOX);
        o->color(FL_BACKGROUND2_COLOR);
        o->labelfont(3);
        o->labelsize(18);
      } // Fl_Box* o
      o->end();
    } // Fl_Group* o
    { tabPane = new Fl_Tabs(16, 401, 694, 562);
      tabPane->box(FL_PLASTIC_THIN_UP_BOX);
      tabPane->color((Fl_Color)48);
      tabPane->callback((Fl_Callback*)tabChange);
      tabPane->when(FL_WHEN_CHANGED);
      { Fl_Scroll* o = new Fl_Scroll(22, 404, 681, 398, "Ensemble 1");
        o->type(2);
        o->box(FL_PLASTIC_DOWN_BOX);
        o->color(FL_DARK1);
        o->labelsize(18);
        { Fl_Group* o = new Fl_Group(26, 414, 658, 120);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(234, 414, 440, 118);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(239, 419, 435, 71);
              o->labelsize(18);
              { sld_preBilateral_d = new Fl_Value_Slider(244, 449, 124, 30, "Pixel diameter:");
                sld_preBilateral_d->type(1);
                sld_preBilateral_d->box(FL_PLASTIC_DOWN_BOX);
                sld_preBilateral_d->selection_color((Fl_Color)14);
                sld_preBilateral_d->labelfont(2);
                sld_preBilateral_d->labelsize(18);
                sld_preBilateral_d->minimum(1);
                sld_preBilateral_d->maximum(50);
                sld_preBilateral_d->step(1);
                sld_preBilateral_d->value(15);
                sld_preBilateral_d->textsize(18);
                sld_preBilateral_d->callback((Fl_Callback*)drawNewImage);
                sld_preBilateral_d->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_preBilateral_d->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_preBilateral_d
              { sld_preBilateral_sCol = new Fl_Value_Slider(384, 449, 133, 30, "Sigma Color:");
                sld_preBilateral_sCol->type(1);
                sld_preBilateral_sCol->box(FL_PLASTIC_DOWN_BOX);
                sld_preBilateral_sCol->selection_color((Fl_Color)14);
                sld_preBilateral_sCol->labelfont(2);
                sld_preBilateral_sCol->labelsize(18);
                sld_preBilateral_sCol->minimum(1);
                sld_preBilateral_sCol->maximum(80);
                sld_preBilateral_sCol->step(0.1);
                sld_preBilateral_sCol->value(50);
                sld_preBilateral_sCol->textsize(18);
                sld_preBilateral_sCol->callback((Fl_Callback*)drawNewImage);
                sld_preBilateral_sCol->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_preBilateral_sCol->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_preBilateral_sCol
              { sld_preBilateral_sSpace = new Fl_Value_Slider(533, 449, 131, 30, "Sigma Space:");
                sld_preBilateral_sSpace->type(1);
                sld_preBilateral_sSpace->box(FL_PLASTIC_DOWN_BOX);
                sld_preBilateral_sSpace->selection_color((Fl_Color)14);
                sld_preBilateral_sSpace->labelfont(2);
                sld_preBilateral_sSpace->labelsize(18);
                sld_preBilateral_sSpace->minimum(1);
                sld_preBilateral_sSpace->maximum(80);
                sld_preBilateral_sSpace->step(0.1);
                sld_preBilateral_sSpace->value(50);
                sld_preBilateral_sSpace->textsize(18);
                sld_preBilateral_sSpace->callback((Fl_Callback*)drawNewImage);
                sld_preBilateral_sSpace->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_preBilateral_sSpace->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_preBilateral_sSpace
              o->end();
            } // Fl_Group* o
            { chk_preBilateral_enable = new Fl_Check_Button(458, 492, 206, 30, "Bilateral Blur (Pre)");
              chk_preBilateral_enable->box(FL_PLASTIC_DOWN_BOX);
              chk_preBilateral_enable->down_box(FL_PLASTIC_DOWN_BOX);
              chk_preBilateral_enable->value(1);
              chk_preBilateral_enable->labelfont(2);
              chk_preBilateral_enable->labelsize(20);
              chk_preBilateral_enable->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_preBilateral_enable
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(34, 415, 190, 50, "1. Initial bluring (Bilateral)");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblPreBilat = new Fl_Box(124, 504, 100, 30, "0 ms");
            lblPreBilat->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblPreBilat->color(FL_DARK2);
            lblPreBilat->labelfont(3);
            lblPreBilat->labelsize(16);
            lblPreBilat->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblPreBilat
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(26, 549, 653, 171);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(234, 549, 445, 166);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(244, 559, 435, 123);
              o->labelsize(18);
              { sld_thrsh_low_2 = new Fl_Value_Slider(249, 559, 420, 32, "Lower Threshold");
                sld_thrsh_low_2->tooltip("The lower value threshold");
                sld_thrsh_low_2->type(3);
                sld_thrsh_low_2->box(FL_PLASTIC_THIN_DOWN_BOX);
                sld_thrsh_low_2->selection_color((Fl_Color)14);
                sld_thrsh_low_2->labelfont(2);
                sld_thrsh_low_2->labelsize(18);
                sld_thrsh_low_2->maximum(255);
                sld_thrsh_low_2->step(1);
                sld_thrsh_low_2->value(25);
                sld_thrsh_low_2->slider_size(1);
                sld_thrsh_low_2->textfont(2);
                sld_thrsh_low_2->textsize(18);
                sld_thrsh_low_2->textcolor(FL_GRAY0);
                sld_thrsh_low_2->callback((Fl_Callback*)drawNewImage);
                sld_thrsh_low_2->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
                sld_thrsh_low_2->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_thrsh_low_2
              { sld_thrsh_high_2 = new Fl_Value_Slider(249, 623, 420, 32, "High Threshold");
                sld_thrsh_high_2->tooltip("The lower value threshold");
                sld_thrsh_high_2->type(3);
                sld_thrsh_high_2->box(FL_PLASTIC_THIN_DOWN_BOX);
                sld_thrsh_high_2->selection_color((Fl_Color)14);
                sld_thrsh_high_2->labelfont(2);
                sld_thrsh_high_2->labelsize(18);
                sld_thrsh_high_2->minimum(1);
                sld_thrsh_high_2->maximum(255);
                sld_thrsh_high_2->step(1);
                sld_thrsh_high_2->value(255);
                sld_thrsh_high_2->slider_size(1);
                sld_thrsh_high_2->textfont(2);
                sld_thrsh_high_2->textsize(18);
                sld_thrsh_high_2->textcolor(FL_GRAY0);
                sld_thrsh_high_2->callback((Fl_Callback*)drawNewImage);
                sld_thrsh_high_2->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
                sld_thrsh_high_2->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_thrsh_high_2
              o->end();
            } // Fl_Group* o
            { chk_threshImg_enable_2 = new Fl_Check_Button(517, 675, 156, 30, "Hue Isolation");
              chk_threshImg_enable_2->box(FL_PLASTIC_DOWN_BOX);
              chk_threshImg_enable_2->down_box(FL_PLASTIC_DOWN_BOX);
              chk_threshImg_enable_2->value(1);
              chk_threshImg_enable_2->labelfont(2);
              chk_threshImg_enable_2->labelsize(20);
              chk_threshImg_enable_2->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_threshImg_enable_2
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(34, 549, 190, 30, "2. Hue thresholding ");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblthreshImg_2 = new Fl_Box(125, 685, 100, 30, "0 ms");
            lblthreshImg_2->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblthreshImg_2->color(FL_DARK2);
            lblthreshImg_2->labelfont(3);
            lblthreshImg_2->labelsize(16);
            lblthreshImg_2->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblthreshImg_2
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(26, 725, 656, 65);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(234, 725, 220, 65);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(258, 750, 15, 15);
              o->labelsize(18);
              o->end();
            } // Fl_Group* o
            { chk_identification_2 = new Fl_Check_Button(244, 747, 200, 33, "Identification");
              chk_identification_2->box(FL_PLASTIC_DOWN_BOX);
              chk_identification_2->down_box(FL_PLASTIC_DOWN_BOX);
              chk_identification_2->value(1);
              chk_identification_2->labelfont(2);
              chk_identification_2->labelsize(20);
              chk_identification_2->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_identification_2
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(32, 725, 193, 25, "3. Identification");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblIdentification_2 = new Fl_Box(124, 760, 101, 30, "0 ms");
            lblIdentification_2->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblIdentification_2->color(FL_DARK2);
            lblIdentification_2->labelfont(3);
            lblIdentification_2->labelsize(16);
            lblIdentification_2->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblIdentification_2
          o->end();
        } // Fl_Group* o
        o->end();
      } // Fl_Scroll* o
      { Fl_Scroll* o = new Fl_Scroll(20, 404, 680, 520, "Ensemble 2");
        o->type(2);
        o->box(FL_PLASTIC_DOWN_BOX);
        o->color(FL_DARK1);
        o->labelsize(18);
        o->hide();
        { Fl_Group* o = new Fl_Group(32, 414, 656, 120);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(232, 414, 446, 118);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(235, 419, 431, 71);
              o->labelsize(18);
              { sld_preMedian_ksize = new Fl_Value_Slider(240, 449, 426, 30, "Kernel Size:");
                sld_preMedian_ksize->type(1);
                sld_preMedian_ksize->box(FL_PLASTIC_DOWN_BOX);
                sld_preMedian_ksize->selection_color((Fl_Color)14);
                sld_preMedian_ksize->labelfont(2);
                sld_preMedian_ksize->labelsize(18);
                sld_preMedian_ksize->minimum(1);
                sld_preMedian_ksize->maximum(50);
                sld_preMedian_ksize->step(1);
                sld_preMedian_ksize->value(3);
                sld_preMedian_ksize->textsize(18);
                sld_preMedian_ksize->callback((Fl_Callback*)sliderOddVal);
                sld_preMedian_ksize->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_preMedian_ksize->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_preMedian_ksize
              o->end();
            } // Fl_Group* o
            { chk_preMedian_enable = new Fl_Check_Button(240, 492, 199, 30, "Median Blur (Pre)");
              chk_preMedian_enable->box(FL_PLASTIC_DOWN_BOX);
              chk_preMedian_enable->down_box(FL_PLASTIC_DOWN_BOX);
              chk_preMedian_enable->value(1);
              chk_preMedian_enable->labelfont(2);
              chk_preMedian_enable->labelsize(20);
              chk_preMedian_enable->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_preMedian_enable
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(32, 415, 190, 30, "1. Initial bluring");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblPreMedian1 = new Fl_Box(122, 504, 100, 30, "0 ms");
            lblPreMedian1->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblPreMedian1->color(FL_DARK2);
            lblPreMedian1->labelfont(3);
            lblPreMedian1->labelsize(16);
            lblPreMedian1->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblPreMedian1
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(32, 543, 656, 148);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(232, 543, 446, 140);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(236, 543, 430, 140);
              o->labelsize(18);
              { sld_MorphOp_ksize1 = new Fl_Value_Slider(504, 637, 162, 31, "Kernel Size:");
                sld_MorphOp_ksize1->type(1);
                sld_MorphOp_ksize1->box(FL_PLASTIC_DOWN_BOX);
                sld_MorphOp_ksize1->selection_color((Fl_Color)14);
                sld_MorphOp_ksize1->labelfont(2);
                sld_MorphOp_ksize1->labelsize(18);
                sld_MorphOp_ksize1->minimum(1);
                sld_MorphOp_ksize1->maximum(50);
                sld_MorphOp_ksize1->step(1);
                sld_MorphOp_ksize1->value(7);
                sld_MorphOp_ksize1->textsize(18);
                sld_MorphOp_ksize1->callback((Fl_Callback*)drawNewImage);
                sld_MorphOp_ksize1->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_MorphOp_ksize1->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_MorphOp_ksize1
              { drp_MorphOp_Shape1 = new Fl_Choice(240, 575, 209, 30, "Morphology Shape");
                drp_MorphOp_Shape1->box(FL_PLASTIC_THIN_UP_BOX);
                drp_MorphOp_Shape1->down_box(FL_PLASTIC_THIN_DOWN_BOX);
                drp_MorphOp_Shape1->selection_color((Fl_Color)14);
                drp_MorphOp_Shape1->labelfont(2);
                drp_MorphOp_Shape1->labelsize(18);
                drp_MorphOp_Shape1->textsize(18);
                drp_MorphOp_Shape1->callback((Fl_Callback*)drawNewImage);
                drp_MorphOp_Shape1->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                drp_MorphOp_Shape1->menu(menu_drp_MorphOp_Shape);
                drp_MorphOp_Shape1->value(0);
              } // Fl_Choice* drp_MorphOp_Shape1
              { drp_MorphOp_Op1 = new Fl_Choice(464, 575, 202, 30, "Morphology Operation");
                drp_MorphOp_Op1->box(FL_PLASTIC_THIN_UP_BOX);
                drp_MorphOp_Op1->down_box(FL_PLASTIC_THIN_DOWN_BOX);
                drp_MorphOp_Op1->selection_color((Fl_Color)14);
                drp_MorphOp_Op1->labelfont(2);
                drp_MorphOp_Op1->labelsize(18);
                drp_MorphOp_Op1->textsize(18);
                drp_MorphOp_Op1->callback((Fl_Callback*)drawNewImage);
                drp_MorphOp_Op1->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                drp_MorphOp_Op1->menu(menu_drp_MorphOp_Op);
                drp_MorphOp_Op1->value(2);
              } // Fl_Choice* drp_MorphOp_Op1
              o->end();
            } // Fl_Group* o
            { chk_MorphOp_enable1 = new Fl_Check_Button(236, 636, 256, 32, "Morphology Operation 1");
              chk_MorphOp_enable1->box(FL_PLASTIC_DOWN_BOX);
              chk_MorphOp_enable1->down_box(FL_PLASTIC_DOWN_BOX);
              chk_MorphOp_enable1->value(1);
              chk_MorphOp_enable1->labelfont(2);
              chk_MorphOp_enable1->labelsize(20);
              chk_MorphOp_enable1->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_MorphOp_enable1
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(32, 543, 190, 54, "2. First Morphology operation");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblMorphOp1 = new Fl_Box(119, 653, 99, 30, "0 ms");
            lblMorphOp1->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblMorphOp1->color(FL_DARK2);
            lblMorphOp1->labelfont(3);
            lblMorphOp1->labelsize(16);
            lblMorphOp1->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblMorphOp1
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(32, 691, 656, 135);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(232, 691, 446, 135);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(232, 691, 431, 135);
              o->labelsize(18);
              { sld_MorphOp_ksize2 = new Fl_Value_Slider(501, 785, 162, 31, "Kernel Size:");
                sld_MorphOp_ksize2->type(1);
                sld_MorphOp_ksize2->box(FL_PLASTIC_DOWN_BOX);
                sld_MorphOp_ksize2->selection_color((Fl_Color)14);
                sld_MorphOp_ksize2->labelfont(2);
                sld_MorphOp_ksize2->labelsize(18);
                sld_MorphOp_ksize2->minimum(1);
                sld_MorphOp_ksize2->maximum(50);
                sld_MorphOp_ksize2->step(1);
                sld_MorphOp_ksize2->value(3);
                sld_MorphOp_ksize2->textsize(18);
                sld_MorphOp_ksize2->callback((Fl_Callback*)drawNewImage);
                sld_MorphOp_ksize2->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_MorphOp_ksize2->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_MorphOp_ksize2
              { drp_MorphOp_Shape2 = new Fl_Choice(237, 723, 209, 30, "Morphology Shape");
                drp_MorphOp_Shape2->box(FL_PLASTIC_THIN_UP_BOX);
                drp_MorphOp_Shape2->down_box(FL_PLASTIC_THIN_DOWN_BOX);
                drp_MorphOp_Shape2->selection_color((Fl_Color)14);
                drp_MorphOp_Shape2->labelfont(2);
                drp_MorphOp_Shape2->labelsize(18);
                drp_MorphOp_Shape2->textsize(18);
                drp_MorphOp_Shape2->callback((Fl_Callback*)drawNewImage);
                drp_MorphOp_Shape2->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                drp_MorphOp_Shape2->menu(menu_drp_MorphOp_Shape);
                drp_MorphOp_Shape2->value(0);
              } // Fl_Choice* drp_MorphOp_Shape2
              { drp_MorphOp_Op2 = new Fl_Choice(461, 723, 202, 30, "Morphology Operation");
                drp_MorphOp_Op2->box(FL_PLASTIC_THIN_UP_BOX);
                drp_MorphOp_Op2->down_box(FL_PLASTIC_THIN_DOWN_BOX);
                drp_MorphOp_Op2->selection_color((Fl_Color)14);
                drp_MorphOp_Op2->labelfont(2);
                drp_MorphOp_Op2->labelsize(18);
                drp_MorphOp_Op2->textsize(18);
                drp_MorphOp_Op2->callback((Fl_Callback*)drawNewImage);
                drp_MorphOp_Op2->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                drp_MorphOp_Op2->menu(menu_drp_MorphOp_Op);
                drp_MorphOp_Op2->value(3);
              } // Fl_Choice* drp_MorphOp_Op2
              o->end();
            } // Fl_Group* o
            { chk_MorphOp_enable2 = new Fl_Check_Button(235, 784, 259, 32, "Morphology Operation 2");
              chk_MorphOp_enable2->box(FL_PLASTIC_DOWN_BOX);
              chk_MorphOp_enable2->down_box(FL_PLASTIC_DOWN_BOX);
              chk_MorphOp_enable2->value(1);
              chk_MorphOp_enable2->labelfont(2);
              chk_MorphOp_enable2->labelsize(20);
              chk_MorphOp_enable2->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_MorphOp_enable2
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(32, 691, 190, 55, "3. Second Morphology operation");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblMorphOp2 = new Fl_Box(121, 796, 99, 30, "0 ms");
            lblMorphOp2->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblMorphOp2->color(FL_DARK2);
            lblMorphOp2->labelfont(3);
            lblMorphOp2->labelsize(16);
            lblMorphOp2->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblMorphOp2
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(32, 836, 656, 110);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(232, 836, 448, 110);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(232, 840, 436, 66);
              o->labelsize(18);
              { sld_postMedian_ksize = new Fl_Value_Slider(240, 868, 426, 30, "Kernel Size:");
                sld_postMedian_ksize->type(1);
                sld_postMedian_ksize->box(FL_PLASTIC_DOWN_BOX);
                sld_postMedian_ksize->color(FL_DARK1);
                sld_postMedian_ksize->selection_color((Fl_Color)14);
                sld_postMedian_ksize->labelfont(2);
                sld_postMedian_ksize->labelsize(18);
                sld_postMedian_ksize->minimum(1);
                sld_postMedian_ksize->maximum(50);
                sld_postMedian_ksize->step(1);
                sld_postMedian_ksize->value(3);
                sld_postMedian_ksize->textsize(18);
                sld_postMedian_ksize->callback((Fl_Callback*)sliderOddVal);
                sld_postMedian_ksize->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_postMedian_ksize->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_postMedian_ksize
              o->end();
            } // Fl_Group* o
            { chk_postMedian_enable = new Fl_Check_Button(240, 908, 203, 33, "Median Blur (Post)");
              chk_postMedian_enable->box(FL_PLASTIC_DOWN_BOX);
              chk_postMedian_enable->down_box(FL_PLASTIC_DOWN_BOX);
              chk_postMedian_enable->value(1);
              chk_postMedian_enable->labelfont(2);
              chk_postMedian_enable->labelsize(20);
              chk_postMedian_enable->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_postMedian_enable
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(32, 836, 190, 25, "4. Final bluring");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblPostMedian = new Fl_Box(128, 916, 99, 30, "0 ms");
            lblPostMedian->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblPostMedian->color(FL_DARK2);
            lblPostMedian->labelfont(3);
            lblPostMedian->labelsize(16);
            lblPostMedian->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblPostMedian
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(32, 954, 656, 166);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(232, 954, 444, 166);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(233, 964, 433, 123);
              o->labelsize(18);
              { sld_thrsh_low_1 = new Fl_Value_Slider(243, 964, 423, 32, "Lower Threshold");
                sld_thrsh_low_1->tooltip("The lower value threshold");
                sld_thrsh_low_1->type(3);
                sld_thrsh_low_1->box(FL_PLASTIC_THIN_DOWN_BOX);
                sld_thrsh_low_1->selection_color((Fl_Color)14);
                sld_thrsh_low_1->labelfont(2);
                sld_thrsh_low_1->labelsize(18);
                sld_thrsh_low_1->maximum(255);
                sld_thrsh_low_1->step(1);
                sld_thrsh_low_1->value(25);
                sld_thrsh_low_1->slider_size(1);
                sld_thrsh_low_1->textfont(2);
                sld_thrsh_low_1->textsize(18);
                sld_thrsh_low_1->textcolor(FL_GRAY0);
                sld_thrsh_low_1->callback((Fl_Callback*)drawNewImage);
                sld_thrsh_low_1->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
                sld_thrsh_low_1->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_thrsh_low_1
              { sld_thrsh_high_1 = new Fl_Value_Slider(243, 1028, 423, 32, "High Threshold");
                sld_thrsh_high_1->tooltip("The lower value threshold");
                sld_thrsh_high_1->type(3);
                sld_thrsh_high_1->box(FL_PLASTIC_THIN_DOWN_BOX);
                sld_thrsh_high_1->selection_color((Fl_Color)14);
                sld_thrsh_high_1->labelfont(2);
                sld_thrsh_high_1->labelsize(18);
                sld_thrsh_high_1->minimum(1);
                sld_thrsh_high_1->maximum(255);
                sld_thrsh_high_1->step(1);
                sld_thrsh_high_1->value(255);
                sld_thrsh_high_1->slider_size(1);
                sld_thrsh_high_1->textfont(2);
                sld_thrsh_high_1->textsize(18);
                sld_thrsh_high_1->textcolor(FL_GRAY0);
                sld_thrsh_high_1->callback((Fl_Callback*)drawNewImage);
                sld_thrsh_high_1->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
                sld_thrsh_high_1->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_thrsh_high_1
              o->end();
            } // Fl_Group* o
            { chk_threshImg_enable_1 = new Fl_Check_Button(241, 1083, 159, 30, "Hue Isolation");
              chk_threshImg_enable_1->box(FL_PLASTIC_DOWN_BOX);
              chk_threshImg_enable_1->down_box(FL_PLASTIC_DOWN_BOX);
              chk_threshImg_enable_1->value(1);
              chk_threshImg_enable_1->labelfont(2);
              chk_threshImg_enable_1->labelsize(20);
              chk_threshImg_enable_1->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_threshImg_enable_1
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(32, 954, 190, 30, "5. Hue thresholding ");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblthreshImg_1 = new Fl_Box(131, 1090, 100, 30, "0 ms");
            lblthreshImg_1->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblthreshImg_1->color(FL_DARK2);
            lblthreshImg_1->labelfont(3);
            lblthreshImg_1->labelsize(16);
            lblthreshImg_1->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblthreshImg_1
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(30, 1130, 658, 95);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(232, 1140, 438, 75);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(256, 1140, 15, 75);
              o->labelsize(18);
              o->end();
            } // Fl_Group* o
            { chk_identification_1 = new Fl_Check_Button(242, 1170, 157, 35, "Identification");
              chk_identification_1->box(FL_PLASTIC_DOWN_BOX);
              chk_identification_1->down_box(FL_PLASTIC_DOWN_BOX);
              chk_identification_1->value(1);
              chk_identification_1->labelfont(2);
              chk_identification_1->labelsize(20);
              chk_identification_1->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_identification_1
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(32, 1140, 190, 30, "6. Identification");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblIdentification_1 = new Fl_Box(127, 1185, 100, 30, "0 ms");
            lblIdentification_1->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblIdentification_1->color(FL_DARK2);
            lblIdentification_1->labelfont(3);
            lblIdentification_1->labelsize(16);
            lblIdentification_1->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblIdentification_1
          o->end();
        } // Fl_Group* o
        o->end();
      } // Fl_Scroll* o
      { Fl_Scroll* o = new Fl_Scroll(20, 404, 683, 491, "Ensemble 3");
        o->type(2);
        o->box(FL_PLASTIC_DOWN_BOX);
        o->color(FL_DARK1);
        o->labelsize(18);
        o->hide();
        { Fl_Group* o = new Fl_Group(28, 551, 647, 261);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(230, 551, 445, 254);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(239, 561, 436, 191);
              o->labelsize(18);
              { drp_AHThresh_ThrshType = new Fl_Choice(240, 583, 165, 30, "Threshold Type");
                drp_AHThresh_ThrshType->box(FL_PLASTIC_THIN_UP_BOX);
                drp_AHThresh_ThrshType->down_box(FL_PLASTIC_THIN_DOWN_BOX);
                drp_AHThresh_ThrshType->selection_color((Fl_Color)14);
                drp_AHThresh_ThrshType->labelfont(2);
                drp_AHThresh_ThrshType->labelsize(18);
                drp_AHThresh_ThrshType->textsize(18);
                drp_AHThresh_ThrshType->callback((Fl_Callback*)drawNewImage);
                drp_AHThresh_ThrshType->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                drp_AHThresh_ThrshType->menu(menu_drp_ThreshTypes);
                drp_AHThresh_ThrshType->value(0);
              } // Fl_Choice* drp_AHThresh_ThrshType
              { drp_AHThresh_AThrshType = new Fl_Choice(415, 583, 250, 30, "Adaptive Threshold Type");
                drp_AHThresh_AThrshType->box(FL_PLASTIC_THIN_UP_BOX);
                drp_AHThresh_AThrshType->down_box(FL_PLASTIC_THIN_DOWN_BOX);
                drp_AHThresh_AThrshType->selection_color((Fl_Color)14);
                drp_AHThresh_AThrshType->labelfont(2);
                drp_AHThresh_AThrshType->labelsize(18);
                drp_AHThresh_AThrshType->textsize(18);
                drp_AHThresh_AThrshType->callback((Fl_Callback*)drawNewImage);
                drp_AHThresh_AThrshType->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                drp_AHThresh_AThrshType->menu(menu_drp_AdaptThreshTypes);
                drp_AHThresh_AThrshType->value(0);
              } // Fl_Choice* drp_AHThresh_AThrshType
              { sld_AHThresh_BlkSz = new Fl_Value_Slider(239, 645, 426, 30, "Block Size");
                sld_AHThresh_BlkSz->type(1);
                sld_AHThresh_BlkSz->box(FL_PLASTIC_DOWN_BOX);
                sld_AHThresh_BlkSz->selection_color((Fl_Color)14);
                sld_AHThresh_BlkSz->labelfont(2);
                sld_AHThresh_BlkSz->labelsize(18);
                sld_AHThresh_BlkSz->minimum(3);
                sld_AHThresh_BlkSz->maximum(450);
                sld_AHThresh_BlkSz->step(1);
                sld_AHThresh_BlkSz->value(3);
                sld_AHThresh_BlkSz->textsize(18);
                sld_AHThresh_BlkSz->callback((Fl_Callback*)sliderOddVal);
                sld_AHThresh_BlkSz->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_AHThresh_BlkSz->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_AHThresh_BlkSz
              { sld_AHThresh_C = new Fl_Value_Slider(239, 707, 426, 30, "Constant c");
                sld_AHThresh_C->type(1);
                sld_AHThresh_C->box(FL_PLASTIC_DOWN_BOX);
                sld_AHThresh_C->selection_color((Fl_Color)14);
                sld_AHThresh_C->labelfont(2);
                sld_AHThresh_C->labelsize(18);
                sld_AHThresh_C->minimum(-150);
                sld_AHThresh_C->maximum(150);
                sld_AHThresh_C->step(1);
                sld_AHThresh_C->value(3);
                sld_AHThresh_C->textsize(18);
                sld_AHThresh_C->callback((Fl_Callback*)drawNewImage);
                sld_AHThresh_C->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_AHThresh_C->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_AHThresh_C
              o->end();
            } // Fl_Group* o
            { chk_AHThresh_enable = new Fl_Check_Button(425, 762, 240, 32, "Adaptive Hue Isolation");
              chk_AHThresh_enable->box(FL_PLASTIC_DOWN_BOX);
              chk_AHThresh_enable->down_box(FL_PLASTIC_DOWN_BOX);
              chk_AHThresh_enable->value(1);
              chk_AHThresh_enable->labelfont(2);
              chk_AHThresh_enable->labelsize(20);
              chk_AHThresh_enable->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_AHThresh_enable
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(30, 551, 190, 48, "2. Adaptive Hue Thresholding ");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblAHThresh = new Fl_Box(120, 764, 100, 30, "0 ms");
            lblAHThresh->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblAHThresh->color(FL_DARK2);
            lblAHThresh->labelfont(3);
            lblAHThresh->labelsize(16);
            lblAHThresh->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblAHThresh
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(26, 815, 649, 65);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(227, 815, 220, 65);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(251, 840, 15, 15);
              o->labelsize(18);
              o->end();
            } // Fl_Group* o
            { chk_identification_3 = new Fl_Check_Button(237, 837, 200, 33, "Identification");
              chk_identification_3->box(FL_PLASTIC_DOWN_BOX);
              chk_identification_3->down_box(FL_PLASTIC_DOWN_BOX);
              chk_identification_3->value(1);
              chk_identification_3->labelfont(2);
              chk_identification_3->labelsize(20);
              chk_identification_3->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_identification_3
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(26, 815, 192, 25, "3. Identification");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblIdentification_3 = new Fl_Box(117, 850, 101, 30, "0 ms");
            lblIdentification_3->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblIdentification_3->color(FL_DARK2);
            lblIdentification_3->labelfont(3);
            lblIdentification_3->labelsize(16);
            lblIdentification_3->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblIdentification_3
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(27, 414, 658, 120);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(229, 414, 446, 118);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(232, 419, 431, 71);
              o->labelsize(18);
              { sld_preMedian_ksize2 = new Fl_Value_Slider(237, 449, 426, 30, "Kernel Size:");
                sld_preMedian_ksize2->type(1);
                sld_preMedian_ksize2->box(FL_PLASTIC_DOWN_BOX);
                sld_preMedian_ksize2->selection_color((Fl_Color)14);
                sld_preMedian_ksize2->labelfont(2);
                sld_preMedian_ksize2->labelsize(18);
                sld_preMedian_ksize2->minimum(1);
                sld_preMedian_ksize2->maximum(50);
                sld_preMedian_ksize2->step(1);
                sld_preMedian_ksize2->value(3);
                sld_preMedian_ksize2->textsize(18);
                sld_preMedian_ksize2->callback((Fl_Callback*)sliderOddVal);
                sld_preMedian_ksize2->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_preMedian_ksize2->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_preMedian_ksize2
              o->end();
            } // Fl_Group* o
            { chk_preMedian_enable2 = new Fl_Check_Button(237, 492, 199, 30, "Median Blur (Pre)");
              chk_preMedian_enable2->box(FL_PLASTIC_DOWN_BOX);
              chk_preMedian_enable2->down_box(FL_PLASTIC_DOWN_BOX);
              chk_preMedian_enable2->value(1);
              chk_preMedian_enable2->labelfont(2);
              chk_preMedian_enable2->labelsize(20);
              chk_preMedian_enable2->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_preMedian_enable2
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(27, 415, 192, 30, "1. Initial bluring");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblPreMedian2 = new Fl_Box(119, 504, 100, 30, "0 ms");
            lblPreMedian2->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblPreMedian2->color(FL_DARK2);
            lblPreMedian2->labelfont(3);
            lblPreMedian2->labelsize(16);
            lblPreMedian2->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblPreMedian2
          o->end();
        } // Fl_Group* o
        o->end();
      } // Fl_Scroll* o
      { Fl_Scroll* o = new Fl_Scroll(20, 404, 680, 520, "Ensemble 4");
        o->type(2);
        o->box(FL_PLASTIC_DOWN_BOX);
        o->color(FL_DARK1);
        o->labelsize(18);
        o->hide();
        { Fl_Group* o = new Fl_Group(32, 414, 656, 120);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(232, 414, 446, 118);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(235, 419, 431, 71);
              o->labelsize(18);
              { sld_preMedian_ksize4 = new Fl_Value_Slider(240, 449, 426, 30, "Kernel Size:");
                sld_preMedian_ksize4->type(1);
                sld_preMedian_ksize4->box(FL_PLASTIC_DOWN_BOX);
                sld_preMedian_ksize4->selection_color((Fl_Color)14);
                sld_preMedian_ksize4->labelfont(2);
                sld_preMedian_ksize4->labelsize(18);
                sld_preMedian_ksize4->minimum(1);
                sld_preMedian_ksize4->maximum(50);
                sld_preMedian_ksize4->step(1);
                sld_preMedian_ksize4->value(3);
                sld_preMedian_ksize4->textsize(18);
                sld_preMedian_ksize4->callback((Fl_Callback*)sliderOddVal);
                sld_preMedian_ksize4->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_preMedian_ksize4->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_preMedian_ksize4
              o->end();
            } // Fl_Group* o
            { chk_preMedian_enable4 = new Fl_Check_Button(240, 492, 199, 30, "Median Blur (Pre)");
              chk_preMedian_enable4->box(FL_PLASTIC_DOWN_BOX);
              chk_preMedian_enable4->down_box(FL_PLASTIC_DOWN_BOX);
              chk_preMedian_enable4->value(1);
              chk_preMedian_enable4->labelfont(2);
              chk_preMedian_enable4->labelsize(20);
              chk_preMedian_enable4->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_preMedian_enable4
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(32, 415, 190, 30, "1. Initial bluring");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblPreMedian4 = new Fl_Box(122, 504, 100, 30, "0 ms");
            lblPreMedian4->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblPreMedian4->color(FL_DARK2);
            lblPreMedian4->labelfont(3);
            lblPreMedian4->labelsize(16);
            lblPreMedian4->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblPreMedian4
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(32, 543, 656, 148);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(232, 543, 446, 140);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(236, 543, 430, 140);
              o->labelsize(18);
              { sld_MorphOp_ksize41 = new Fl_Value_Slider(504, 637, 162, 31, "Kernel Size:");
                sld_MorphOp_ksize41->type(1);
                sld_MorphOp_ksize41->box(FL_PLASTIC_DOWN_BOX);
                sld_MorphOp_ksize41->selection_color((Fl_Color)14);
                sld_MorphOp_ksize41->labelfont(2);
                sld_MorphOp_ksize41->labelsize(18);
                sld_MorphOp_ksize41->minimum(1);
                sld_MorphOp_ksize41->maximum(50);
                sld_MorphOp_ksize41->step(1);
                sld_MorphOp_ksize41->value(7);
                sld_MorphOp_ksize41->textsize(18);
                sld_MorphOp_ksize41->callback((Fl_Callback*)drawNewImage);
                sld_MorphOp_ksize41->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_MorphOp_ksize41->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_MorphOp_ksize41
              { drp_MorphOp_Shape41 = new Fl_Choice(240, 575, 209, 30, "Morphology Shape");
                drp_MorphOp_Shape41->box(FL_PLASTIC_THIN_UP_BOX);
                drp_MorphOp_Shape41->down_box(FL_PLASTIC_THIN_DOWN_BOX);
                drp_MorphOp_Shape41->selection_color((Fl_Color)14);
                drp_MorphOp_Shape41->labelfont(2);
                drp_MorphOp_Shape41->labelsize(18);
                drp_MorphOp_Shape41->textsize(18);
                drp_MorphOp_Shape41->callback((Fl_Callback*)drawNewImage);
                drp_MorphOp_Shape41->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                drp_MorphOp_Shape41->menu(menu_drp_MorphOp_Shape);
                drp_MorphOp_Shape41->value(0);
              } // Fl_Choice* drp_MorphOp_Shape41
              { drp_MorphOp_Op41 = new Fl_Choice(464, 575, 202, 30, "Morphology Operation");
                drp_MorphOp_Op41->box(FL_PLASTIC_THIN_UP_BOX);
                drp_MorphOp_Op41->down_box(FL_PLASTIC_THIN_DOWN_BOX);
                drp_MorphOp_Op41->selection_color((Fl_Color)14);
                drp_MorphOp_Op41->labelfont(2);
                drp_MorphOp_Op41->labelsize(18);
                drp_MorphOp_Op41->textsize(18);
                drp_MorphOp_Op41->callback((Fl_Callback*)drawNewImage);
                drp_MorphOp_Op41->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                drp_MorphOp_Op41->menu(menu_drp_MorphOp_Op);
                drp_MorphOp_Op41->value(2);
              } // Fl_Choice* drp_MorphOp_Op41
              o->end();
            } // Fl_Group* o
            { chk_MorphOp_enable41 = new Fl_Check_Button(236, 636, 256, 32, "Morphology Operation 1");
              chk_MorphOp_enable41->box(FL_PLASTIC_DOWN_BOX);
              chk_MorphOp_enable41->down_box(FL_PLASTIC_DOWN_BOX);
              chk_MorphOp_enable41->value(1);
              chk_MorphOp_enable41->labelfont(2);
              chk_MorphOp_enable41->labelsize(20);
              chk_MorphOp_enable41->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_MorphOp_enable41
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(32, 543, 190, 54, "2. First Morphology operation");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblMorphOp41 = new Fl_Box(119, 653, 99, 30, "0 ms");
            lblMorphOp41->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblMorphOp41->color(FL_DARK2);
            lblMorphOp41->labelfont(3);
            lblMorphOp41->labelsize(16);
            lblMorphOp41->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblMorphOp41
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(32, 691, 656, 135);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(232, 691, 446, 135);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(232, 691, 431, 135);
              o->labelsize(18);
              { sld_MorphOp_ksize42 = new Fl_Value_Slider(501, 785, 162, 31, "Kernel Size:");
                sld_MorphOp_ksize42->type(1);
                sld_MorphOp_ksize42->box(FL_PLASTIC_DOWN_BOX);
                sld_MorphOp_ksize42->selection_color((Fl_Color)14);
                sld_MorphOp_ksize42->labelfont(2);
                sld_MorphOp_ksize42->labelsize(18);
                sld_MorphOp_ksize42->minimum(1);
                sld_MorphOp_ksize42->maximum(50);
                sld_MorphOp_ksize42->step(1);
                sld_MorphOp_ksize42->value(3);
                sld_MorphOp_ksize42->textsize(18);
                sld_MorphOp_ksize42->callback((Fl_Callback*)drawNewImage);
                sld_MorphOp_ksize42->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_MorphOp_ksize42->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_MorphOp_ksize42
              { drp_MorphOp_Shape42 = new Fl_Choice(237, 723, 209, 30, "Morphology Shape");
                drp_MorphOp_Shape42->box(FL_PLASTIC_THIN_UP_BOX);
                drp_MorphOp_Shape42->down_box(FL_PLASTIC_THIN_DOWN_BOX);
                drp_MorphOp_Shape42->selection_color((Fl_Color)14);
                drp_MorphOp_Shape42->labelfont(2);
                drp_MorphOp_Shape42->labelsize(18);
                drp_MorphOp_Shape42->textsize(18);
                drp_MorphOp_Shape42->callback((Fl_Callback*)drawNewImage);
                drp_MorphOp_Shape42->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                drp_MorphOp_Shape42->menu(menu_drp_MorphOp_Shape);
                drp_MorphOp_Shape42->value(0);
              } // Fl_Choice* drp_MorphOp_Shape42
              { drp_MorphOp_Op42 = new Fl_Choice(461, 723, 202, 30, "Morphology Operation");
                drp_MorphOp_Op42->box(FL_PLASTIC_THIN_UP_BOX);
                drp_MorphOp_Op42->down_box(FL_PLASTIC_THIN_DOWN_BOX);
                drp_MorphOp_Op42->selection_color((Fl_Color)14);
                drp_MorphOp_Op42->labelfont(2);
                drp_MorphOp_Op42->labelsize(18);
                drp_MorphOp_Op42->textsize(18);
                drp_MorphOp_Op42->callback((Fl_Callback*)drawNewImage);
                drp_MorphOp_Op42->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                drp_MorphOp_Op42->menu(menu_drp_MorphOp_Op);
                drp_MorphOp_Op42->value(3);
              } // Fl_Choice* drp_MorphOp_Op42
              o->end();
            } // Fl_Group* o
            { chk_MorphOp_enable42 = new Fl_Check_Button(235, 784, 259, 32, "Morphology Operation 2");
              chk_MorphOp_enable42->box(FL_PLASTIC_DOWN_BOX);
              chk_MorphOp_enable42->down_box(FL_PLASTIC_DOWN_BOX);
              chk_MorphOp_enable42->value(1);
              chk_MorphOp_enable42->labelfont(2);
              chk_MorphOp_enable42->labelsize(20);
              chk_MorphOp_enable42->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_MorphOp_enable42
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(32, 691, 190, 55, "3. Second Morphology operation");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblMorphOp42 = new Fl_Box(121, 796, 99, 30, "0 ms");
            lblMorphOp42->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblMorphOp42->color(FL_DARK2);
            lblMorphOp42->labelfont(3);
            lblMorphOp42->labelsize(16);
            lblMorphOp42->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblMorphOp42
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(32, 836, 656, 110);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(232, 836, 448, 110);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(232, 840, 436, 66);
              o->labelsize(18);
              { sld_postMedian_ksize4 = new Fl_Value_Slider(240, 868, 426, 30, "Kernel Size:");
                sld_postMedian_ksize4->type(1);
                sld_postMedian_ksize4->box(FL_PLASTIC_DOWN_BOX);
                sld_postMedian_ksize4->color(FL_DARK1);
                sld_postMedian_ksize4->selection_color((Fl_Color)14);
                sld_postMedian_ksize4->labelfont(2);
                sld_postMedian_ksize4->labelsize(18);
                sld_postMedian_ksize4->minimum(1);
                sld_postMedian_ksize4->maximum(50);
                sld_postMedian_ksize4->step(1);
                sld_postMedian_ksize4->value(3);
                sld_postMedian_ksize4->textsize(18);
                sld_postMedian_ksize4->callback((Fl_Callback*)sliderOddVal);
                sld_postMedian_ksize4->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_postMedian_ksize4->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_postMedian_ksize4
              o->end();
            } // Fl_Group* o
            { chk_postMedian_enable4 = new Fl_Check_Button(240, 908, 203, 33, "Median Blur (Post)");
              chk_postMedian_enable4->box(FL_PLASTIC_DOWN_BOX);
              chk_postMedian_enable4->down_box(FL_PLASTIC_DOWN_BOX);
              chk_postMedian_enable4->value(1);
              chk_postMedian_enable4->labelfont(2);
              chk_postMedian_enable4->labelsize(20);
              chk_postMedian_enable4->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_postMedian_enable4
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(32, 836, 190, 25, "4. Post bluring");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblPostMedian4 = new Fl_Box(128, 916, 99, 30, "0 ms");
            lblPostMedian4->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblPostMedian4->color(FL_DARK2);
            lblPostMedian4->labelfont(3);
            lblPostMedian4->labelsize(16);
            lblPostMedian4->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblPostMedian4
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(32, 951, 651, 261);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(234, 951, 449, 254);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(244, 961, 436, 191);
              o->labelsize(18);
              { drp_AHThresh_ThrshType4 = new Fl_Choice(245, 983, 165, 30, "Threshold Type");
                drp_AHThresh_ThrshType4->box(FL_PLASTIC_THIN_UP_BOX);
                drp_AHThresh_ThrshType4->down_box(FL_PLASTIC_THIN_DOWN_BOX);
                drp_AHThresh_ThrshType4->selection_color((Fl_Color)14);
                drp_AHThresh_ThrshType4->labelfont(2);
                drp_AHThresh_ThrshType4->labelsize(18);
                drp_AHThresh_ThrshType4->textsize(18);
                drp_AHThresh_ThrshType4->callback((Fl_Callback*)drawNewImage);
                drp_AHThresh_ThrshType4->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                drp_AHThresh_ThrshType4->menu(menu_drp_ThreshTypes);
                drp_AHThresh_ThrshType4->value(0);
              } // Fl_Choice* drp_AHThresh_ThrshType4
              { drp_AHThresh_AThrshType4 = new Fl_Choice(420, 983, 250, 30, "Adaptive Threshold Type");
                drp_AHThresh_AThrshType4->box(FL_PLASTIC_THIN_UP_BOX);
                drp_AHThresh_AThrshType4->down_box(FL_PLASTIC_THIN_DOWN_BOX);
                drp_AHThresh_AThrshType4->selection_color((Fl_Color)14);
                drp_AHThresh_AThrshType4->labelfont(2);
                drp_AHThresh_AThrshType4->labelsize(18);
                drp_AHThresh_AThrshType4->textsize(18);
                drp_AHThresh_AThrshType4->callback((Fl_Callback*)drawNewImage);
                drp_AHThresh_AThrshType4->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                drp_AHThresh_AThrshType4->menu(menu_drp_AdaptThreshTypes);
                drp_AHThresh_AThrshType4->value(0);
              } // Fl_Choice* drp_AHThresh_AThrshType4
              { sld_AHThresh_BlkSz4 = new Fl_Value_Slider(244, 1045, 426, 30, "Block Size");
                sld_AHThresh_BlkSz4->type(1);
                sld_AHThresh_BlkSz4->box(FL_PLASTIC_DOWN_BOX);
                sld_AHThresh_BlkSz4->selection_color((Fl_Color)14);
                sld_AHThresh_BlkSz4->labelfont(2);
                sld_AHThresh_BlkSz4->labelsize(18);
                sld_AHThresh_BlkSz4->minimum(3);
                sld_AHThresh_BlkSz4->maximum(450);
                sld_AHThresh_BlkSz4->step(1);
                sld_AHThresh_BlkSz4->value(131);
                sld_AHThresh_BlkSz4->textsize(18);
                sld_AHThresh_BlkSz4->callback((Fl_Callback*)sliderOddVal);
                sld_AHThresh_BlkSz4->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_AHThresh_BlkSz4->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_AHThresh_BlkSz4
              { sld_AHThresh_C4 = new Fl_Value_Slider(244, 1107, 426, 30, "Constant c");
                sld_AHThresh_C4->type(1);
                sld_AHThresh_C4->box(FL_PLASTIC_DOWN_BOX);
                sld_AHThresh_C4->selection_color((Fl_Color)14);
                sld_AHThresh_C4->labelfont(2);
                sld_AHThresh_C4->labelsize(18);
                sld_AHThresh_C4->minimum(-150);
                sld_AHThresh_C4->maximum(150);
                sld_AHThresh_C4->step(1);
                sld_AHThresh_C4->textsize(18);
                sld_AHThresh_C4->callback((Fl_Callback*)drawNewImage);
                sld_AHThresh_C4->align(Fl_Align(FL_ALIGN_TOP_LEFT));
                sld_AHThresh_C4->when(FL_WHEN_RELEASE);
              } // Fl_Value_Slider* sld_AHThresh_C4
              o->end();
            } // Fl_Group* o
            { chk_AHThresh_enable4 = new Fl_Check_Button(430, 1162, 240, 32, "Adaptive Hue Isolation");
              chk_AHThresh_enable4->box(FL_PLASTIC_DOWN_BOX);
              chk_AHThresh_enable4->down_box(FL_PLASTIC_DOWN_BOX);
              chk_AHThresh_enable4->value(1);
              chk_AHThresh_enable4->labelfont(2);
              chk_AHThresh_enable4->labelsize(20);
              chk_AHThresh_enable4->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_AHThresh_enable4
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(34, 951, 190, 48, "5. Adaptive Hue Thresholding ");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblAHThresh4 = new Fl_Box(124, 1164, 100, 30, "0 ms");
            lblAHThresh4->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblAHThresh4->color(FL_DARK2);
            lblAHThresh4->labelfont(3);
            lblAHThresh4->labelsize(16);
            lblAHThresh4->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblAHThresh4
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(32, 1215, 658, 95);
          o->labelsize(18);
          { Fl_Group* o = new Fl_Group(234, 1225, 438, 75);
            o->box(FL_PLASTIC_DOWN_BOX);
            o->color((Fl_Color)44);
            o->labelsize(24);
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            { Fl_Group* o = new Fl_Group(252, 1225, 15, 75);
              o->labelsize(18);
              o->end();
            } // Fl_Group* o
            { chk_identification_4 = new Fl_Check_Button(238, 1255, 157, 35, "Identification");
              chk_identification_4->box(FL_PLASTIC_DOWN_BOX);
              chk_identification_4->down_box(FL_PLASTIC_DOWN_BOX);
              chk_identification_4->value(1);
              chk_identification_4->labelfont(2);
              chk_identification_4->labelsize(20);
              chk_identification_4->callback((Fl_Callback*)switchVisibility);
            } // Fl_Check_Button* chk_identification_4
            o->end();
          } // Fl_Group* o
          { Fl_Box* o = new Fl_Box(34, 1225, 190, 30, "6. Identification");
            o->box(FL_PLASTIC_DOWN_FRAME);
            o->color(FL_DARK2);
            o->labelfont(3);
            o->labelsize(16);
            o->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* o
          { lblIdentification_4 = new Fl_Box(129, 1270, 100, 30, "0 ms");
            lblIdentification_4->box(FL_PLASTIC_ROUND_DOWN_BOX);
            lblIdentification_4->color(FL_DARK2);
            lblIdentification_4->labelfont(3);
            lblIdentification_4->labelsize(16);
            lblIdentification_4->align(Fl_Align(132|FL_ALIGN_INSIDE));
          } // Fl_Box* lblIdentification_4
          o->end();
        } // Fl_Group* o
        o->end();
      } // Fl_Scroll* o
      tabPane->end();
    } // Fl_Tabs* tabPane
    { Fl_Group* o = new Fl_Group(20, 14, 680, 364);
      o->box(FL_PLASTIC_DOWN_BOX);
      o->color((Fl_Color)46);
      { dirTree = new Fl_Tree(40, 37, 330, 219);
        dirTree->box(FL_PLASTIC_DOWN_BOX);
        dirTree->labelsize(20);
        dirTree->callback((Fl_Callback*)loadImgFromTree);
        dirTree->when(FL_WHEN_RELEASE);
        dirTree->root_label("Loaded Images");
      } // Fl_Tree* dirTree
      { Fl_Group* o = new Fl_Group(380, 230, 310, 128, "Time Statistics");
        o->box(FL_PLASTIC_DOWN_FRAME);
        o->labelsize(18);
        o->align(Fl_Align(FL_ALIGN_TOP|FL_ALIGN_INSIDE));
        { lblTotTime = new Fl_Box(390, 317, 290, 33, "0 ms | 0 s | 0 fps");
          lblTotTime->box(FL_PLASTIC_ROUND_DOWN_BOX);
          lblTotTime->labelsize(18);
          lblTotTime->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
        } // Fl_Box* lblTotTime
        { Fl_Box* o = new Fl_Box(390, 289, 170, 27, "Total time taken:");
          o->labelsize(18);
          o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Box* o
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(380, 147, 310, 73, "Change Callback on:");
        o->box(FL_PLASTIC_DOWN_FRAME);
        o->labelsize(18);
        o->align(Fl_Align(133|FL_ALIGN_INSIDE));
        { Fl_Light_Button* o = new Fl_Light_Button(390, 180, 140, 30, "Release");
          o->box(FL_PLASTIC_ROUND_DOWN_BOX);
          o->down_box(FL_PLASTIC_ROUND_DOWN_BOX);
          o->selection_color((Fl_Color)14);
          o->labelsize(18);
          o->callback((Fl_Callback*)toggleCB);
          o->do_callback();
        } // Fl_Light_Button* o
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(555, 37, 135, 100);
        o->box(FL_PLASTIC_DOWN_FRAME);
        o->labelsize(18);
        { Fl_Button* o = new Fl_Button(565, 47, 115, 35, "Help");
          o->box(FL_PLASTIC_THIN_UP_BOX);
          o->down_box(FL_PLASTIC_THIN_DOWN_BOX);
          o->labelsize(18);
        } // Fl_Button* o
        { Fl_Button* o = new Fl_Button(565, 92, 115, 35, "Credits");
          o->box(FL_PLASTIC_THIN_UP_BOX);
          o->down_box(FL_PLASTIC_THIN_DOWN_BOX);
          o->labelsize(18);
          o->callback((Fl_Callback*)credits);
        } // Fl_Button* o
        o->end();
      } // Fl_Group* o
      { Fl_Box* o = new Fl_Box(380, 37, 165, 100, "Simple Grape\'s Stem Approximator");
        o->box(FL_PLASTIC_DOWN_FRAME);
        o->labelfont(3);
        o->labelsize(22);
        o->align(Fl_Align(132|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { Fl_Group* o = new Fl_Group(40, 266, 330, 92);
        o->box(FL_PLASTIC_DOWN_FRAME);
        o->labelsize(18);
        { btn_loadImg = new Fl_Button(205, 276, 155, 30, "Load New Image");
          btn_loadImg->box(FL_PLASTIC_THIN_UP_BOX);
          btn_loadImg->down_box(FL_PLASTIC_THIN_DOWN_BOX);
          btn_loadImg->labelsize(18);
          btn_loadImg->callback((Fl_Callback*)chooseFile);
        } // Fl_Button* btn_loadImg
        { Fl_Button* o = new Fl_Button(50, 276, 145, 30, "Remove picture");
          o->box(FL_PLASTIC_THIN_UP_BOX);
          o->shortcut(0xffff);
          o->down_box(FL_PLASTIC_THIN_DOWN_BOX);
          o->labelfont(2);
          o->labelsize(18);
          o->callback((Fl_Callback*)removeFileEntry);
        } // Fl_Button* o
        { btn_saveImg = new Fl_Button(180, 316, 180, 30, "Save final Image as");
          btn_saveImg->box(FL_PLASTIC_THIN_UP_BOX);
          btn_saveImg->down_box(FL_PLASTIC_THIN_DOWN_BOX);
          btn_saveImg->labelsize(18);
          btn_saveImg->callback((Fl_Callback*)saveImg);
          btn_saveImg->deactivate();
        } // Fl_Button* btn_saveImg
        o->end();
      } // Fl_Group* o
      o->end();
    } // Fl_Group* o
    window->end();
  } // Fl_Double_Window* window
  {
  nativeFileChooser = new Fl_Native_File_Chooser();
  tabPane->do_callback();
  }
  //window->end();
  window->show();
  
  return Fl::run();
}
